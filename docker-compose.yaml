services:
  app1:
    image: projeto-sd
    container_name: projeto-sd-1
    ports:
      - '8080:8080'
    depends_on:
      - broker1
      - broker2
      - broker3
      - prometheus
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - KAFKA_BOOTSTRAP_SERVERS=broker1:9092,broker2:9092,broker3:9092
      - SPRING_KAFKA_PRODUCER_ACK=all
      - KAFKA_ORDERED_PRODUCER=true
      - PROMETHEUS_SERVER=prometheus:9090
  app2:
    image: projeto-sd
    container_name: projeto-sd-2
    ports:
      - '8081:8080'
    depends_on:
      - broker1
      - broker2
      - broker3
      - prometheus
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - KAFKA_BOOTSTRAP_SERVERS=broker1:9092,broker2:9092,broker3:9092
      - SPRING_KAFKA_PRODUCER_ACK=1
      - KAFKA_ORDERED_PRODUCER=true
      - PROMETHEUS_SERVER=prometheus:9090
  app3:
    image: projeto-sd
    container_name: projeto-sd-3
    ports:
      - '8082:8080'
    depends_on:
      - broker1
      - broker2
      - broker3
      - prometheus
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - KAFKA_BOOTSTRAP_SERVERS=broker1:9092,broker2:9092,broker3:9092
      - SPRING_KAFKA_PRODUCER_ACK=0
      - KAFKA_ORDERED_PRODUCER=true
      - PROMETHEUS_SERVER=prometheus:9090

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker1:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-broker-1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  broker2:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-broker-2
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  broker3:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-broker-3
    ports:
      - "39092:39092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092,PLAINTEXT_INTERNAL://localhost:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - sd_grafana_data:/var/lib/grafana

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - sd_prometheus_data:/prometheus
    ports:
      - '9090:9090'

volumes:
  sd_grafana_data: {}
  sd_prometheus_data: {}

